yum install docker -y

service docker start

Service docker status

docker version  (show the docker version)

docker image ls    or      docker images  (display the all images)

docker pull httpd    (download image from docker hub)

docker run -it -d --name web1 -p 81:80 httpd  (create container via local image)

docker run -it --name con1  ubuntu /bin/bash   (pull image than create container with con1 name than login)

exit   (logout with container)

docker start con1   (start con1 service)

docker exec -it con1 bash   (login with container  con1 )

docker stop con1   (stop con1)

docker ps    (display only running container)

docker ps -a    (display all container either running or stop)

docker rm con1   (delete the container)

docker image rm ubuntu  (delete the image)

docker commit cont1 ashishjaintechg/image1

docker login

docker run --name test-mysql -v /home/techg/docker/sqldata:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=db2admin -p 3306:3306  -d mysql:5.7

mysql -h 127.0.0.1 -P 3306 -u root -p

docker pull openzipkin/zipkin


docker push

docker pull 
docker run --name test_zipkin -d -p 9411:9411 openzipkin/zipkin

docker
docker images
services docker status
docker status
sudo groupadd docker
sudo usermod -aG docker ${USER}
docker images
sudo usermod -aG docker ${USER}
docker images
sudo groupadd docker
sudo usermod -aG docker ${USER}
docker images
sudo chown "$USER":"$USER" /home/"$USER"/.docker -R
sudo chmod 666 /var/run/docker.sock
docker images
docker pull chrome
docker login
docker pull chrome
docker search java
docker status
docker images java8
docker pull java8
docker pull openjdk:8
docker images
docker run openjdk
docker container create --name jdk8 openjdk
docker container create --name jdk8 openjdk:8
docker ps -a
docker run jdk8
docker exec -it jdk8 bash
docker exec -it b1acac0b06cb bash
docker start jdk8
docker exec -it b1acac0b06cb bash
docker exec -it jdk8 bash
docker start -d jdk8
docker -d start jdk8
docker ps -a
docker rm b1acac0b06cb
docker ps -a
docker run -d openjdk:8
docker ps -a
docker run hello-world
docker images
docker run -it ubuntu bash
docker images
docker run -it ubuntu bash
docker images
docker search python
docker search python3
docker pull python38
docker pull python:38
docker login
docker pull python:38
docker pull python:3.8
docker search python3.8
docker search python:3.8
docker images
docker search mysql
docker pull mysql:5.7
docker images
docker ps -a
docker ps
docker images
docker exec -it openjdk:8 bash
docker images
docker run hell-world
docker run hello-world
systemctl start docker
systemctl status docker
docker
docker --version
docker help run
docker images
docker run -it openjdk:8:jdk8 bash
docker run -it openjdk:jdk8 bash
docker run -it openjdk bash
docker run -it openjdk:8 bash

sudo groupadd docker

sudo usermod -ag docker ${USER}
ls /var/run/docker.sock
docker
docker --version
docker images
docker search 
docker pull
docker pull jenkins/jenkins:lts
docker run -it openjdk:8 bash
systemctl start docker
docker login
sudo chown "$USER":"$USER" /home/"$USER"/.docker -R
sudo chmod 666 /var/run/docker.sock
docker pull openjdk:8
docker container create --name jdk8 openjdk:8
docker ps -a
docker start jdk8
docker stop jdk8
docker rm jdk8
docker run -d openjdk:8
docker run hello-world
docker run -it ubuntu bash
docker run -it ubuntu bash
docker search python:3.8
docker pull mysql:5.7
docker exec -it openjdk:8 bash
docker run hello-world
systemctl start docker
systemctl status docker
docker help create
docker run -it openjdk:8 bash
docker history jenkins/jenkins:lts
docker exec -it [container-name] -u root bash

docker volume ls
docker volume create myvolume
docker volume prune (will remove unused)
docker volume inspect myvolume
docker run -td --name ashish -p 80:80 ubuntu
docker port ashish
docker exec -it ashish /bin/bash
docker run -td --name jenkin1 -p 8080:8080 jenkins
docker run -it --name cont1 myvolumimage /bin/bash
Dockerfile
docker build -t docker-image .
docker run -it --name cont2 --previledged =true --volume-from cont1 ubuntu /bin/bash
docker attach cont1
docker run -it --name cont3 -v /myvolume ubuntu /bin/bash
docker run -it --name ec2con -v /home/ec2-user:/itest --previledged=true ubuntu /bin/bash



